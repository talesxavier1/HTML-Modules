name: Update LocalWeb VM

on:
    push:
        branches:
          - dev
    pull_request:
        branches:
          - main
jobs:
    start-main:
        runs-on: ubuntu-latest
        env:
          SSH_USERNAME: ${{ secrets.LW_VM001_USER_NAME }}
          SSH_PASSWORD: ${{ secrets.LW_VM001_USER_PASSD }}
          VM_IP: ${{ secrets.LOCAL_WEB_IP_VM_001 }}
          VM_DEV_PATH: ${{ vars.LOCAL_WEB_DEV_PATH_MV_001 }}
          VM_PROD_PATH: ${{vars.LOCAL_WEB_PROD_PATH_MV_001}}

        steps:
            - name: Check out the repository
              uses: actions/checkout@v2
          
            - name: Set up Docker
              uses: docker/setup-buildx-action@v2


            - name: Build and save docker tar.
              run: |
                # $1 -> "refs/heads/dev" | "refs/heads/main"
                main () {
                  if [ $1 == "refs/heads/dev" ]; then
                    docker build --rm -f "DockerFile" -t image-typescripteditor-dev:latest "."
                    docker save -o image-typescripteditor-dev.tar image-typescripteditor-dev:latest
                  elif [ $1 == "refs/heads/main" ]; then
                    docker build --rm -f "DockerFile" -t image-typescripteditor-prod:latest "."
                    docker save -o image-typescripteditor-prod.tar image-typescripteditor-prod:latest
                  else
                    docker build --rm -f "DockerFile" -t image-typescripteditor:latest "."
                    docker save -o image-typescripteditor.tar image-typescripteditor:latest "."
                  fi
                }
                main ${{github.ref}} 

            - name: Install sshpass
              run: sudo apt-get install -y sshpass
            
            - name: Remove current tar.
              run: |
                sshpass -p '${{env.SSH_PASSWORD}}' ssh -v -o StrictHostKeyChecking=no ${{env.SSH_USERNAME}}@${{env.VM_IP}} <<'ENDSSH'
                # $1 -> "refs/heads/dev" | "refs/heads/main"
                main () {
                  if [ $1 == "refs/heads/dev" ]; then
                    rm -rf ${{env.VM_DEV_PATH}}/*

                  elif [ $1 == "refs/heads/main" ]; then
                    rm -rf ${{env.VM_PROD_PATH}}/*

                  fi
                }
                main ${{github.ref}} 
                ENDSSH

            - name: Move new tar
              run: |
                # $1 -> "refs/heads/dev" | "refs/heads/main"
                main () {
                  if [ $1 == "refs/heads/dev" ]; then
                    sshpass -p '${{env.SSH_PASSWORD}}' scp -v -o StrictHostKeyChecking=no -r *.tar ${{env.SSH_USERNAME}}@${{env.VM_IP}}:${{env.VM_DEV_PATH}}
                  elif [ $1 == "refs/heads/main" ]; then
                    sshpass -p '${{env.SSH_PASSWORD}}' scp -v -o StrictHostKeyChecking=no -r *.tar ${{env.SSH_USERNAME}}@${{env.VM_IP}}:${{env.VM_PROD_PATH}}
                  fi
                }
                main ${{github.ref}} 

            - name: Drop Current container and up new
              run: |
                # $1 -> "refs/heads/dev" | "refs/heads/main"
                sshpass -p '${{env.SSH_PASSWORD}}' ssh -v -o StrictHostKeyChecking=no ${{env.SSH_USERNAME}}@${{env.VM_IP}} <<'ENDSSH'
                export DOCKER_HOST=unix:///var/run/docker.sock
                main () {
                  if [ $1 == "refs/heads/dev" ]; then
                    # DROP DEV
                    docker stop typescripteditor-dev || true
                    docker rm typescripteditor-dev || true
                    docker rmi image-typescripteditor-dev || true

                    # UP DEV
                    cd ${{env.VM_DEV_PATH}}/
                    docker load < image-typescripteditor-dev.tar
                    docker run -d --name typescripteditor-dev -p 2000:80 image-typescripteditor-dev

                  elif [ $1 == "refs/heads/main" ]; then
                    # DROP PROD
                    docker stop typescripteditor-prod || true
                    docker rm typescripteditor-prod || true
                    docker rmi image-typescripteditor-prod || true
                    # UP PROD
                    cd ${{env.VM_PROD_PATH}}/
                    docker load < image-typescripteditor-prod.tar
                    docker run -d --name typescripteditor-dev -p 2000:80 image-typescripteditor-prod
                  fi
                }
                main ${{github.ref}} 
                ENDSSH